# greenDAOQuick
========
greenDAO is a light & fast ORM solution for Android that maps objects to SQLite databases. Being highly optimized for Android, greenDAO offers great performance and consumes minimal memory.

**<font size="+1">Home page, documentation, and support links: http://greendao-orm.com/</font>**

[![Build Status](https://travis-ci.org/greenrobot/greenDAO.svg?branch=master)](https://travis-ci.org/greenrobot/greenDAO)

How to get started
-----------------------------------------------------
This tutorial will walk you through an simple greenDAO example project. It is available on https://github.com/greenrobot/greenDAO and consists of two subprojects (folders): DaoExample and DaoExampleGenerator. You can either clone the git repository to get the code and run it, or just view view the files directly on github.
### Pre-generated code and creating the table
Now, let’s look at some code. In the folder src-gen, you’ll find some already generated artifacts:
1) Note.java is a Java class containing all data a note has
2) NoteDao.java is the DAO class, your interface to work with Note objects

You can always generate Note and NoteDao again using the DaoExampleGenerator project. But let’s stick to DaoExample for a minute. Using the DaoMaster class you can aquire a convenience SQLiteOpenHelper:

```java
new DaoMaster.DevOpenHelper(this, "notes-db", null)
```

As you notice, you do not have to code “CREATE TABLE” SQL scripts. greenDAO does that for you.

Inserting and deleting notes
==============================
So once we have a table for our notes, we can put in some notes in the database. This is done in the NoteActivity class. In the onCreate method we prepare a DAO object:

```java
daoMaster = new DaoMaster(db);
daoSession = daoMaster.newSession();
noteDao = daoSession.getNoteDao();
```

Now have a look at the addNote method, how you insert a new note in the database:

```java
Note note = new Note(null, noteText, comment, new Date());
noteDao.insert(note);
Log.d("DaoExample", "Inserted new note, ID: " + note.getId());
```

Just create a Java object and call insert on the DAO. When the insert method returns, the database id of the just inserted note is already assigned to the object, as you can see in the log statment.

Deleting a note is also straight forward; have a look at the onListItemClick method:

```java
noteDao.deleteByKey(id);
```

If you want, you can explore other DAO methods like loadAll and update.

Data model and code generation
---------------
In order to extend the note or to create new entities, you should have a look at the DaoExampleGenerator project. It contains a single class containing the data model definition in code:

```java
Schema schema = new Schema(1, "de.greenrobot.daoexample");

Entity note= schema.addEntity("Note");
note.addIdProperty();
note.addStringProperty("text").notNull();
note.addStringProperty("comment");
note.addDateProperty("date");

new DaoGenerator().generateAll(schema, "../DaoExample/src-gen");
```
